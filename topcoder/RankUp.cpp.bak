// BEGIN CUT HERE
/*
// PROBLEM STATEMENT
// 
The competitive ladder in your favorite game has four divisions.
From lowest (weakest) to highest (strongest) these are Bronze, Silver, Gold, and Platinum.


Each division is further divided into four subdivisions called 4, 3, 2, 1 from lowest to highest.
E.g., "Platinum 1" is the best subdivision in the game and "Bronze 4" is the worst one.



Your progress within a subdivision is measured in stars. At any moment you can have between 0 and 5 stars, inclusive.


Whenever you win a game, you gain two stars. (If this would cause you to exceed 5, the extra stars are discarded.)
Whenever you lose a game, you lose one star. (If you don't have any, nothing happens.)



After you won a game and received the appropriate number of stars for it, the game checks whether to promote you to the next higher subdivision.


This happens if you have 5 stars and at the same time you won the last three games.
After the promotion you will be in the next higher subdivision (e.g., you will move from "Bronze 3" to "Bronze 2" or from "Silver 1" to "Gold 4") and you will have zero stars.


After you lost a game and lost the appropriate number of stars for it, the game checks whether to demote you to the next lower subdivision.


This happens if you have 0 stars and at the same time you lost the last three games. 
After the demotion you will be in the next lower subdivision (e.g., you will move from "Bronze 2" to "Bronze 3") with 5 stars.



You can only be demoted to a lower subdivision within the same division.
You cannot be demoted to a lower division.
For example, once you reach Silver, you can never be demoted back to Bronze.
If you keep losing in "Silver 4", you will remain in Silver 4 with zero stars.


And obviously, there's nothing below "Bronze 4" and nothing above "Platinum 1", so you cannot get demoted from "Bronze 4" and you cannot get promoted from "Platinum 1".



A player starts in "Bronze 4" with no stars.
You are given their win and loss record in the string record: each 'W' represents a won game and each 'L' a lost game, in the order in which they were played.
Compute and return their final subdivision.
(Use the format used in this problem statement, with a single space before the number. Note that the return value is case-sensitive.)


DEFINITION
Class:RankUp
Method:level
Parameters:string
Returns:string
Method signature:string level(string record)


NOTES
-This is the full order of all subdivisions, from worst to best: "Bronze 4", "Bronze 3", "Bronze 2", "Bronze 1", "Silver 4", "Silver 3", "Silver 2", "Silver 1", "Gold 4", "Gold 3", "Gold 2", "Gold 1", "Platinum 4", "Platinum 3", "Platinum 2", "Platinum 1".
-Don't miss the fact that the stars aren't symmetric: you get two for a win but you only lose one for a loss.


CONSTRAINTS
-record will have between 1 and 1000 characters, inclusive.
-Each character in record will be 'W' or 'L'.


EXAMPLES

0)
"LLLLL"

Returns: "Bronze 4"

When you are in "Bronze 4", there's nowhere lower to go. This player remains in "Bronze 4" and never earns any stars.

1)
"WWLWW"

Returns: "Bronze 4"

This player progresses as follows:

Wins a game. She is now in "Bronze 4" with 2 stars.
Wins a game. She is now in "Bronze 4" with 4 stars.
Loses a game. She is now in "Bronze 4" with 3 stars.
Wins a game. She is now in "Bronze 4" with 5 stars.
Wins a game. She is now in "Bronze 4" with 5 stars. (No new stars were awarded, as the player already has 5.)


The player didn't get promoted yet. At the end, she does have five stars, but she has only won the last two games and she needs three to be promoted.

2)
"WWLLWWW"

Returns: "Bronze 3"

This player progresses as follows:

Wins a game. She is now in "Bronze 4" with 2 stars.
Wins a game. She is now in "Bronze 4" with 4 stars.
Loses a game. She is now in "Bronze 4" with 3 stars.
Loses a game. She is now in "Bronze 4" with 2 stars.
Wins a game. She is now in "Bronze 4" with 4 stars.
Wins a game. She is now in "Bronze 4" with 5 stars. (Only one new star was awarded, as the player cannot have more than 5.)
Wins a game. No new stars are awarded (she already has 5). Then, she is promoted to "Bronze 3" because she has 5 stars and she has won the last three games.


In the end, the player is in "Bronze 3" (with 0 stars).

3)
"WWWLLL"

Returns: "Bronze 4"

The three wins promote this player to "Bronze 3", but after the following three losses he is demoted back to "Bronze 4". Note that after the demotion he now has 5 stars.

4)
"WWWWWWWWWWWWWLLL"

Returns: "Silver 4"

The first 12 wins promote the player all the way to "Silver 4". The player then gets two stars for the 13th win, loses a star for a loss, loses a star for another loss, and remains at zero stars after the third loss. As you cannot get demoted to a lower division, the player remains in "Silver 4" with no stars.

5)
"WWWWWLLL"

Returns: "Bronze 3"

After the five wins this player is in "Bronze 3" with four stars. Then she has three losses in a row. After those three losses she is in "Bronze 3" with one star. Even though she had three losses in a row, she did not get demoted because she isn't at zero stars yet.

6)
"WWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWW"

Returns: "Platinum 1"

Once you reach "Platinum 1", there's nowhere higher to go.

7)
"WWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWLLLLLLLWWLWWWWLW"

Returns: "Platinum 3"

This player reached "Platinum 4", then went on a losing streak, and eventually managed to earn one more promotion: to "Platinum 3".

8)
"WWWWWWLLLLLL"

Returns: "Bronze 3"

The first three wins get this player promoted to "Bronze 3". The next three wins get him promoted to "Bronze 2". The next three losses get him demoted back to "Bronze 3". At this moment the player is in "Bronze 3" with 5 stars. He then loses a star for each of the next three losses. In the end, the player is still in "Bronze 3" and he has two stars.

*/
// END CUT HERE

#line 160 "RankUp.cpp"
#include <cstdlib>
#include <cctype>
#include <cstring>
#include <cstdio>
#include <cmath>
#include <algorithm>
#include <string>
#include <vector>
#include <iostream>
#include <sstream>
#include <map>
#include <set>
#include <queue>
#include <stack>
#include <fstream>
#include <numeric>
#include <iomanip>
#include <bitset>
#include <list>
#include <stdexcept>
#include <functional>
#include <utility>
#include <ctime>
using namespace std;

#define PB push_back
#define MP make_pair

#define SIZE(X) ((int)(X.size()))
#define REP(i, n) for(int i=0; i<(n); ++i)
#define FOR(i, l, h) for(int i=(l); i<=(h); ++i)
#define FORD(i, h, l) for(int i=(h); i>=(l);--i)
#define ALL(A) A.begin(),A.end()

typedef vector<int> VI;
typedef vector<string> VS;
typedef vector<double> VD;
typedef long long LL;
typedef pair<int, int> PII;
class RankUp {
	public:
	string level(string record) {
      return "";
	}
};
// BEGIN CUT HERE
int main() {
    RankUp __test;
    __test.run_test(-1);
    return 0;
}
// END CUT HERE
